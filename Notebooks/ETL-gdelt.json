{"paragraphs":[{"text":"import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection \nimport org.apache.spark.sql.functions._\n\n\ndef fileDownloader(urlOfFileToDownload: String, fileName: String) = {\n    val url = new URL(urlOfFileToDownload)\n    val connection = url.openConnection().asInstanceOf[HttpURLConnection]\n    connection.setConnectTimeout(5000)\n    connection.setReadTimeout(5000)\n    connection.connect()\n\n    if (connection.getResponseCode >= 400)\n        println(\"error\")\n    else\n        url #> new File(fileName) !!\n}","user":"anonymous","dateUpdated":"2020-01-22T19:29:54+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one feature warning; re-run with -feature for details\nimport sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection\nimport org.apache.spark.sql.functions._\nfileDownloader: (urlOfFileToDownload: String, fileName: String)Any\n"}]},"apps":[],"jobName":"paragraph_1579714635281_-1959721190","id":"20200117-084853_890706269","dateCreated":"2020-01-22T17:37:15+0000","dateStarted":"2020-01-22T19:29:54+0000","dateFinished":"2020-01-22T19:29:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1339"},{"text":"fileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\", \"/mnt/tmp/masterfilelist.txt\") // save the list file to the Spark Master","user":"anonymous","dateUpdated":"2020-01-22T19:29:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res7: Any = \"\"\n"}]},"apps":[],"jobName":"paragraph_1579714635282_315577996","id":"20200117-084912_1192902524","dateCreated":"2020-01-22T17:37:15+0000","dateStarted":"2020-01-22T19:29:59+0000","dateFinished":"2020-01-22T19:30:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1340"},{"text":"import com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicAWSCredentials\n    \nval AWS_ID = \"insert id\"\nval AWS_KEY = \"insert key"\n// la classe AmazonS3Client n'est pas serializable\n// on rajoute l'annotation @transient pour dire a Spark de ne pas essayer de serialiser cette classe et l'envoyer aux executeurs\n@transient val awsClient = new AmazonS3Client(new BasicAWSCredentials(AWS_ID, AWS_KEY))\n\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", AWS_ID) // mettre votre ID du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", AWS_KEY) // mettre votre secret du fichier credentials.csv\n\nawsClient.putObject(\"fpsx-telecom-gdelt2019\", \"masterfilelist.txt\", new File( \"/mnt/tmp/masterfilelist.txt\") )","user":"anonymous","dateUpdated":"2020-01-22T19:30:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicAWSCredentials\nAWS_ID: String = AKIAS4U3P2UU5U4JOWXX\nAWS_KEY: String = KIsg3ZwFTBsw36IgOK/+UqNtOK8pTVS/cMrId/yH\nawsClient: com.amazonaws.services.s3.AmazonS3Client = com.amazonaws.services.s3.AmazonS3Client@4de8f8a4\nres8: com.amazonaws.services.s3.model.PutObjectResult = com.amazonaws.services.s3.model.PutObjectResult@1af48c81\n"}]},"apps":[],"jobName":"paragraph_1579715976780_1656227726","id":"20200122-175936_1523528327","dateCreated":"2020-01-22T17:59:36+0000","dateStarted":"2020-01-22T19:30:09+0000","dateFinished":"2020-01-22T19:30:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1342"},{"text":"import org.apache.spark.sql.SQLContext\n\nval sqlContext = new SQLContext(sc)\nval filesDF = sqlContext.read.\n                    option(\"delimiter\",\" \").\n                    option(\"infer_schema\",\"true\").\n                    csv(\"s3a://fpsx-telecom-gdelt2019/masterfilelist.txt\").\n                    withColumnRenamed(\"_c0\",\"size\").\n                    withColumnRenamed(\"_c1\",\"hash\").\n                    withColumnRenamed(\"_c2\",\"url\").\n                    cache","user":"anonymous","dateUpdated":"2020-01-22T19:30:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nimport org.apache.spark.sql.SQLContext\nsqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@424d40b5\nfilesDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [size: string, hash: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1579715852372_-1295231917","id":"20200122-175732_1893288632","dateCreated":"2020-01-22T17:57:32+0000","dateStarted":"2020-01-22T19:30:15+0000","dateFinished":"2020-01-22T19:30:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1343"},{"text":"val sampleDF = filesDF.filter(col(\"url\").contains(\"/201912\")).cache","user":"anonymous","dateUpdated":"2020-01-22T19:30:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sampleDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [size: string, hash: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1579714635283_15589402","id":"20200117-085111_788630888","dateCreated":"2020-01-22T17:37:15+0000","dateStarted":"2020-01-22T19:30:20+0000","dateFinished":"2020-01-22T19:30:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1344"},{"text":"object AwsClient{\n    val s3 = new AmazonS3Client(new BasicAWSCredentials(AWS_ID, AWS_KEY))\n}\n\n\nsampleDF.select(\"url\").repartition(100).foreach( r=> {\n            val URL = r.getAs[String](0)\n            val fileName = r.getAs[String](0).split(\"/\").last\n            val dir = \"/mnt/tmp/\"\n            val localFileName = dir + fileName\n            fileDownloader(URL,  localFileName)\n            val localFile = new File(localFileName)\n            AwsClient.s3.putObject(\"fpsx-telecom-gdelt2019\", fileName, localFile )\n            localFile.delete()\n            \n})","user":"anonymous","dateUpdated":"2020-01-22T22:50:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\ndefined object AwsClient\n"}]},"apps":[],"jobName":"paragraph_1579714635283_795168401","id":"20200117-085141_1090087684","dateCreated":"2020-01-22T17:37:15+0000","dateStarted":"2020-01-22T19:30:23+0000","dateFinished":"2020-01-22T19:50:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1345"}],"name":"gdelt-ETL-jperes","id":"2EZNA3C36","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
